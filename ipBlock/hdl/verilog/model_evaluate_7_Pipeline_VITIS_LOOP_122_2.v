// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module model_evaluate_7_Pipeline_VITIS_LOOP_122_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inputs_address0,
        inputs_ce0,
        inputs_q0,
        conv4_i_1624_out,
        conv4_i_1624_out_ap_vld,
        conv4_i_1523_out,
        conv4_i_1523_out_ap_vld,
        conv4_i_1422_out,
        conv4_i_1422_out_ap_vld,
        conv4_i_1321_out,
        conv4_i_1321_out_ap_vld,
        conv4_i_1220_out,
        conv4_i_1220_out_ap_vld,
        conv4_i_1119_out,
        conv4_i_1119_out_ap_vld,
        conv4_i_1018_out,
        conv4_i_1018_out_ap_vld,
        conv4_i_917_out,
        conv4_i_917_out_ap_vld,
        conv4_i_816_out,
        conv4_i_816_out_ap_vld,
        conv4_i_715_out,
        conv4_i_715_out_ap_vld,
        conv4_i_614_out,
        conv4_i_614_out_ap_vld,
        conv4_i_513_out,
        conv4_i_513_out_ap_vld,
        conv4_i_412_out,
        conv4_i_412_out_ap_vld,
        conv4_i_311_out,
        conv4_i_311_out_ap_vld,
        conv4_i_210_out,
        conv4_i_210_out_ap_vld,
        conv4_i_19_out,
        conv4_i_19_out_ap_vld,
        conv4_i8_out,
        conv4_i8_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 10'd1;
parameter    ap_ST_fsm_pp0_stage1 = 10'd2;
parameter    ap_ST_fsm_pp0_stage2 = 10'd4;
parameter    ap_ST_fsm_pp0_stage3 = 10'd8;
parameter    ap_ST_fsm_pp0_stage4 = 10'd16;
parameter    ap_ST_fsm_pp0_stage5 = 10'd32;
parameter    ap_ST_fsm_pp0_stage6 = 10'd64;
parameter    ap_ST_fsm_pp0_stage7 = 10'd128;
parameter    ap_ST_fsm_pp0_stage8 = 10'd256;
parameter    ap_ST_fsm_pp0_stage9 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] inputs_address0;
output   inputs_ce0;
input  [7:0] inputs_q0;
output  [20:0] conv4_i_1624_out;
output   conv4_i_1624_out_ap_vld;
output  [20:0] conv4_i_1523_out;
output   conv4_i_1523_out_ap_vld;
output  [20:0] conv4_i_1422_out;
output   conv4_i_1422_out_ap_vld;
output  [20:0] conv4_i_1321_out;
output   conv4_i_1321_out_ap_vld;
output  [20:0] conv4_i_1220_out;
output   conv4_i_1220_out_ap_vld;
output  [20:0] conv4_i_1119_out;
output   conv4_i_1119_out_ap_vld;
output  [20:0] conv4_i_1018_out;
output   conv4_i_1018_out_ap_vld;
output  [20:0] conv4_i_917_out;
output   conv4_i_917_out_ap_vld;
output  [20:0] conv4_i_816_out;
output   conv4_i_816_out_ap_vld;
output  [20:0] conv4_i_715_out;
output   conv4_i_715_out_ap_vld;
output  [20:0] conv4_i_614_out;
output   conv4_i_614_out_ap_vld;
output  [20:0] conv4_i_513_out;
output   conv4_i_513_out_ap_vld;
output  [20:0] conv4_i_412_out;
output   conv4_i_412_out_ap_vld;
output  [20:0] conv4_i_311_out;
output   conv4_i_311_out_ap_vld;
output  [20:0] conv4_i_210_out;
output   conv4_i_210_out_ap_vld;
output  [20:0] conv4_i_19_out;
output   conv4_i_19_out_ap_vld;
output  [20:0] conv4_i8_out;
output   conv4_i8_out_ap_vld;

reg ap_idle;
reg inputs_ce0;
reg conv4_i_1624_out_ap_vld;
reg conv4_i_1523_out_ap_vld;
reg conv4_i_1422_out_ap_vld;
reg conv4_i_1321_out_ap_vld;
reg conv4_i_1220_out_ap_vld;
reg conv4_i_1119_out_ap_vld;
reg conv4_i_1018_out_ap_vld;
reg conv4_i_917_out_ap_vld;
reg conv4_i_816_out_ap_vld;
reg conv4_i_715_out_ap_vld;
reg conv4_i_614_out_ap_vld;
reg conv4_i_513_out_ap_vld;
reg conv4_i_412_out_ap_vld;
reg conv4_i_311_out_ap_vld;
reg conv4_i_210_out_ap_vld;
reg conv4_i_19_out_ap_vld;
reg conv4_i8_out_ap_vld;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state13_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln122_reg_1273;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_subdone;
reg   [10:0] DENSE_OUT_WEIGHTS_V_address0;
reg    DENSE_OUT_WEIGHTS_V_ce0;
wire  signed [7:0] DENSE_OUT_WEIGHTS_V_q0;
reg   [10:0] DENSE_OUT_WEIGHTS_V_address1;
reg    DENSE_OUT_WEIGHTS_V_ce1;
wire  signed [7:0] DENSE_OUT_WEIGHTS_V_q1;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state11_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [6:0] feature_reg_1262;
wire   [0:0] icmp_ln122_fu_534_p2;
wire  signed [6:0] xor_ln130_fu_552_p2;
reg  signed [6:0] xor_ln130_reg_1287;
wire  signed [15:0] sext_ln1494_fu_568_p1;
reg  signed [15:0] sext_ln1494_reg_1299;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state12_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire  signed [7:0] zext_ln130_1_cast_fu_580_p3;
reg  signed [7:0] zext_ln130_1_cast_reg_1330;
wire    ap_block_pp0_stage2_11001;
wire  signed [8:0] zext_ln130_3_cast_fu_611_p3;
reg  signed [8:0] zext_ln130_3_cast_reg_1356;
wire  signed [8:0] add_ln130_fu_623_p2;
reg  signed [8:0] add_ln130_reg_1366;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire   [9:0] zext_ln122_1_fu_670_p1;
reg   [9:0] zext_ln122_1_reg_1416;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire    ap_block_pp0_stage9_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln122_fu_546_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln130_fu_558_p1;
wire   [63:0] zext_ln130_1_fu_587_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln130_2_fu_595_p1;
wire   [63:0] zext_ln130_3_fu_618_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln130_4_fu_629_p1;
wire   [63:0] zext_ln130_5_fu_651_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln130_6_fu_659_p1;
wire   [63:0] zext_ln130_7_fu_688_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln130_8_fu_699_p1;
wire   [63:0] zext_ln130_9_fu_733_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln130_10_fu_743_p1;
wire   [63:0] zext_ln130_11_fu_773_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln130_12_fu_781_p1;
wire   [63:0] zext_ln130_13_fu_811_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln130_14_fu_819_p1;
wire   [63:0] zext_ln130_15_fu_853_p1;
wire    ap_block_pp0_stage8;
reg   [6:0] feature_1_fu_92;
wire   [6:0] feature_2_fu_540_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_feature;
reg  signed [20:0] conv4_i8_fu_96;
wire  signed [20:0] grp_fu_981_p3;
reg  signed [20:0] conv4_i_19_fu_100;
wire  signed [20:0] grp_fu_990_p3;
reg  signed [20:0] conv4_i_210_fu_104;
wire  signed [20:0] grp_fu_999_p3;
reg  signed [20:0] conv4_i_311_fu_108;
wire  signed [20:0] grp_fu_1007_p3;
reg  signed [20:0] conv4_i_412_fu_112;
wire  signed [20:0] grp_fu_1015_p3;
reg  signed [20:0] conv4_i_513_fu_116;
wire  signed [20:0] grp_fu_1023_p3;
reg  signed [20:0] conv4_i_614_fu_120;
wire  signed [20:0] grp_fu_1031_p3;
reg  signed [20:0] conv4_i_715_fu_124;
wire  signed [20:0] grp_fu_1039_p3;
reg  signed [20:0] conv4_i_816_fu_128;
wire  signed [20:0] grp_fu_1047_p3;
reg  signed [20:0] conv4_i_917_fu_132;
wire  signed [20:0] grp_fu_1055_p3;
reg  signed [20:0] conv4_i_1018_fu_136;
wire  signed [20:0] grp_fu_1063_p3;
reg  signed [20:0] conv4_i_1119_fu_140;
wire  signed [20:0] grp_fu_1071_p3;
reg  signed [20:0] conv4_i_1220_fu_144;
wire  signed [20:0] grp_fu_1079_p3;
wire    ap_block_pp0_stage9;
reg  signed [20:0] conv4_i_1321_fu_148;
wire  signed [20:0] grp_fu_1087_p3;
reg  signed [20:0] conv4_i_1422_fu_152;
wire  signed [20:0] grp_fu_1095_p3;
reg  signed [20:0] conv4_i_1523_fu_156;
wire  signed [20:0] grp_fu_1103_p3;
reg  signed [20:0] conv4_i_1624_fu_160;
wire  signed [20:0] grp_fu_1111_p3;
wire    ap_block_pp0_stage2_01001;
wire  signed [7:0] sext_ln130_fu_592_p1;
wire   [8:0] zext_ln122_2_fu_600_p1;
wire  signed [8:0] sext_ln130_1_fu_648_p1;
wire  signed [8:0] sext_ln130_2_fu_656_p1;
wire   [9:0] zext_ln130_7_cast_fu_681_p3;
wire   [9:0] add_ln130_1_fu_693_p2;
wire   [9:0] zext_ln130_9_cast_fu_726_p3;
wire   [9:0] add_ln130_2_fu_738_p2;
wire  signed [9:0] sext_ln130_3_fu_770_p1;
wire  signed [9:0] sext_ln130_4_fu_778_p1;
wire  signed [9:0] sext_ln130_5_fu_808_p1;
wire  signed [9:0] sext_ln130_6_fu_816_p1;
wire   [10:0] zext_ln130_15_cast_fu_846_p3;
wire  signed [7:0] grp_fu_981_p1;
wire  signed [7:0] grp_fu_990_p1;
wire  signed [7:0] grp_fu_999_p1;
wire  signed [7:0] grp_fu_1007_p1;
wire  signed [7:0] grp_fu_1015_p1;
wire  signed [7:0] grp_fu_1023_p1;
wire  signed [7:0] grp_fu_1031_p1;
wire  signed [7:0] grp_fu_1039_p1;
wire  signed [7:0] grp_fu_1047_p1;
wire  signed [7:0] grp_fu_1055_p1;
wire  signed [7:0] grp_fu_1063_p1;
wire  signed [7:0] grp_fu_1071_p1;
wire  signed [7:0] grp_fu_1079_p1;
wire  signed [7:0] grp_fu_1087_p1;
wire  signed [7:0] grp_fu_1095_p1;
wire  signed [7:0] grp_fu_1103_p1;
wire  signed [7:0] grp_fu_1111_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [9:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

model_evaluate_7_Pipeline_VITIS_LOOP_122_2_DENSE_OUT_WEIGHTS_V_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 1088 ),
    .AddressWidth( 11 ))
DENSE_OUT_WEIGHTS_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DENSE_OUT_WEIGHTS_V_address0),
    .ce0(DENSE_OUT_WEIGHTS_V_ce0),
    .q0(DENSE_OUT_WEIGHTS_V_q0),
    .address1(DENSE_OUT_WEIGHTS_V_address1),
    .ce1(DENSE_OUT_WEIGHTS_V_ce1),
    .q1(DENSE_OUT_WEIGHTS_V_q1)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2313(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q1),
    .din1(grp_fu_981_p1),
    .din2(conv4_i8_fu_96),
    .ce(1'b1),
    .dout(grp_fu_981_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2314(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q0),
    .din1(grp_fu_990_p1),
    .din2(conv4_i_19_fu_100),
    .ce(1'b1),
    .dout(grp_fu_990_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2315(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q1),
    .din1(grp_fu_999_p1),
    .din2(conv4_i_210_fu_104),
    .ce(1'b1),
    .dout(grp_fu_999_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2316(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q0),
    .din1(grp_fu_1007_p1),
    .din2(conv4_i_311_fu_108),
    .ce(1'b1),
    .dout(grp_fu_1007_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2317(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q1),
    .din1(grp_fu_1015_p1),
    .din2(conv4_i_412_fu_112),
    .ce(1'b1),
    .dout(grp_fu_1015_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2318(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q0),
    .din1(grp_fu_1023_p1),
    .din2(conv4_i_513_fu_116),
    .ce(1'b1),
    .dout(grp_fu_1023_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2319(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q1),
    .din1(grp_fu_1031_p1),
    .din2(conv4_i_614_fu_120),
    .ce(1'b1),
    .dout(grp_fu_1031_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2320(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q0),
    .din1(grp_fu_1039_p1),
    .din2(conv4_i_715_fu_124),
    .ce(1'b1),
    .dout(grp_fu_1039_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2321(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q1),
    .din1(grp_fu_1047_p1),
    .din2(conv4_i_816_fu_128),
    .ce(1'b1),
    .dout(grp_fu_1047_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2322(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q0),
    .din1(grp_fu_1055_p1),
    .din2(conv4_i_917_fu_132),
    .ce(1'b1),
    .dout(grp_fu_1055_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2323(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q1),
    .din1(grp_fu_1063_p1),
    .din2(conv4_i_1018_fu_136),
    .ce(1'b1),
    .dout(grp_fu_1063_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2324(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q0),
    .din1(grp_fu_1071_p1),
    .din2(conv4_i_1119_fu_140),
    .ce(1'b1),
    .dout(grp_fu_1071_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2325(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q1),
    .din1(grp_fu_1079_p1),
    .din2(conv4_i_1220_fu_144),
    .ce(1'b1),
    .dout(grp_fu_1079_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2326(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q0),
    .din1(grp_fu_1087_p1),
    .din2(conv4_i_1321_fu_148),
    .ce(1'b1),
    .dout(grp_fu_1087_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2327(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q1),
    .din1(grp_fu_1095_p1),
    .din2(conv4_i_1422_fu_152),
    .ce(1'b1),
    .dout(grp_fu_1095_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2328(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q0),
    .din1(grp_fu_1103_p1),
    .din2(conv4_i_1523_fu_156),
    .ce(1'b1),
    .dout(grp_fu_1103_p3)
);

model_mac_muladd_8s_8s_21s_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
mac_muladd_8s_8s_21s_21_4_1_U2329(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(DENSE_OUT_WEIGHTS_V_q0),
    .din1(grp_fu_1111_p1),
    .din2(conv4_i_1624_fu_160),
    .ce(1'b1),
    .dout(grp_fu_1111_p3)
);

model_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv4_i8_fu_96 <= 21'd0;
    end else if (((icmp_ln122_reg_1273 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv4_i8_fu_96 <= grp_fu_981_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv4_i_1018_fu_136 <= 21'd0;
    end else if (((icmp_ln122_reg_1273 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        conv4_i_1018_fu_136 <= grp_fu_1063_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv4_i_1119_fu_140 <= 21'd0;
    end else if (((icmp_ln122_reg_1273 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        conv4_i_1119_fu_140 <= grp_fu_1071_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            conv4_i_1220_fu_144 <= 21'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            conv4_i_1220_fu_144 <= grp_fu_1079_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            conv4_i_1321_fu_148 <= 21'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            conv4_i_1321_fu_148 <= grp_fu_1087_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv4_i_1422_fu_152 <= 21'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv4_i_1422_fu_152 <= grp_fu_1095_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv4_i_1523_fu_156 <= 21'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv4_i_1523_fu_156 <= grp_fu_1103_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv4_i_1624_fu_160 <= 21'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_1624_fu_160 <= grp_fu_1111_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv4_i_19_fu_100 <= 21'd0;
    end else if (((icmp_ln122_reg_1273 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv4_i_19_fu_100 <= grp_fu_990_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv4_i_210_fu_104 <= 21'd0;
    end else if (((icmp_ln122_reg_1273 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        conv4_i_210_fu_104 <= grp_fu_999_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv4_i_311_fu_108 <= 21'd0;
    end else if (((icmp_ln122_reg_1273 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        conv4_i_311_fu_108 <= grp_fu_1007_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv4_i_412_fu_112 <= 21'd0;
    end else if (((icmp_ln122_reg_1273 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        conv4_i_412_fu_112 <= grp_fu_1015_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv4_i_513_fu_116 <= 21'd0;
    end else if (((icmp_ln122_reg_1273 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        conv4_i_513_fu_116 <= grp_fu_1023_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv4_i_614_fu_120 <= 21'd0;
    end else if (((icmp_ln122_reg_1273 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        conv4_i_614_fu_120 <= grp_fu_1031_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv4_i_715_fu_124 <= 21'd0;
    end else if (((icmp_ln122_reg_1273 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        conv4_i_715_fu_124 <= grp_fu_1039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv4_i_816_fu_128 <= 21'd0;
    end else if (((icmp_ln122_reg_1273 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        conv4_i_816_fu_128 <= grp_fu_1047_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv4_i_917_fu_132 <= 21'd0;
    end else if (((icmp_ln122_reg_1273 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        conv4_i_917_fu_132 <= grp_fu_1055_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln122_fu_534_p2 == 1'd0))) begin
            feature_1_fu_92 <= feature_2_fu_540_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            feature_1_fu_92 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_reg_1273 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln130_reg_1366 <= add_ln130_fu_623_p2;
        zext_ln130_3_cast_reg_1356[6 : 0] <= zext_ln130_3_cast_fu_611_p3[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        feature_reg_1262 <= ap_sig_allocacmp_feature;
        icmp_ln122_reg_1273 <= icmp_ln122_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_reg_1273 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sext_ln1494_reg_1299 <= sext_ln1494_fu_568_p1;
        zext_ln130_1_cast_reg_1330[6 : 0] <= zext_ln130_1_cast_fu_580_p3[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln122_fu_534_p2 == 1'd0))) begin
        xor_ln130_reg_1287 <= xor_ln130_fu_552_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_reg_1273 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        zext_ln122_1_reg_1416[6 : 0] <= zext_ln122_1_fu_670_p1[6 : 0];
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            DENSE_OUT_WEIGHTS_V_address0 = zext_ln130_15_fu_853_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            DENSE_OUT_WEIGHTS_V_address0 = zext_ln130_14_fu_819_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            DENSE_OUT_WEIGHTS_V_address0 = zext_ln130_12_fu_781_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            DENSE_OUT_WEIGHTS_V_address0 = zext_ln130_10_fu_743_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            DENSE_OUT_WEIGHTS_V_address0 = zext_ln130_8_fu_699_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            DENSE_OUT_WEIGHTS_V_address0 = zext_ln130_6_fu_659_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            DENSE_OUT_WEIGHTS_V_address0 = zext_ln130_4_fu_629_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            DENSE_OUT_WEIGHTS_V_address0 = zext_ln130_2_fu_595_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            DENSE_OUT_WEIGHTS_V_address0 = zext_ln130_fu_558_p1;
        end else begin
            DENSE_OUT_WEIGHTS_V_address0 = 'bx;
        end
    end else begin
        DENSE_OUT_WEIGHTS_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            DENSE_OUT_WEIGHTS_V_address1 = zext_ln130_13_fu_811_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            DENSE_OUT_WEIGHTS_V_address1 = zext_ln130_11_fu_773_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            DENSE_OUT_WEIGHTS_V_address1 = zext_ln130_9_fu_733_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            DENSE_OUT_WEIGHTS_V_address1 = zext_ln130_7_fu_688_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            DENSE_OUT_WEIGHTS_V_address1 = zext_ln130_5_fu_651_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            DENSE_OUT_WEIGHTS_V_address1 = zext_ln130_3_fu_618_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            DENSE_OUT_WEIGHTS_V_address1 = zext_ln130_1_fu_587_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            DENSE_OUT_WEIGHTS_V_address1 = zext_ln122_fu_546_p1;
        end else begin
            DENSE_OUT_WEIGHTS_V_address1 = 'bx;
        end
    end else begin
        DENSE_OUT_WEIGHTS_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        DENSE_OUT_WEIGHTS_V_ce0 = 1'b1;
    end else begin
        DENSE_OUT_WEIGHTS_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        DENSE_OUT_WEIGHTS_V_ce1 = 1'b1;
    end else begin
        DENSE_OUT_WEIGHTS_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_feature = 7'd0;
    end else begin
        ap_sig_allocacmp_feature = feature_1_fu_92;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i8_out_ap_vld = 1'b1;
    end else begin
        conv4_i8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_1018_out_ap_vld = 1'b1;
    end else begin
        conv4_i_1018_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_1119_out_ap_vld = 1'b1;
    end else begin
        conv4_i_1119_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_1220_out_ap_vld = 1'b1;
    end else begin
        conv4_i_1220_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_1321_out_ap_vld = 1'b1;
    end else begin
        conv4_i_1321_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_1422_out_ap_vld = 1'b1;
    end else begin
        conv4_i_1422_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_1523_out_ap_vld = 1'b1;
    end else begin
        conv4_i_1523_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_1624_out_ap_vld = 1'b1;
    end else begin
        conv4_i_1624_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_19_out_ap_vld = 1'b1;
    end else begin
        conv4_i_19_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_210_out_ap_vld = 1'b1;
    end else begin
        conv4_i_210_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_311_out_ap_vld = 1'b1;
    end else begin
        conv4_i_311_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_412_out_ap_vld = 1'b1;
    end else begin
        conv4_i_412_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_513_out_ap_vld = 1'b1;
    end else begin
        conv4_i_513_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_614_out_ap_vld = 1'b1;
    end else begin
        conv4_i_614_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_715_out_ap_vld = 1'b1;
    end else begin
        conv4_i_715_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_816_out_ap_vld = 1'b1;
    end else begin
        conv4_i_816_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_1273 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv4_i_917_out_ap_vld = 1'b1;
    end else begin
        conv4_i_917_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputs_ce0 = 1'b1;
    end else begin
        inputs_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln130_1_fu_693_p2 = ($signed(zext_ln122_1_fu_670_p1) + $signed(10'd576));

assign add_ln130_2_fu_738_p2 = ($signed(zext_ln122_1_reg_1416) + $signed(10'd704));

assign add_ln130_fu_623_p2 = ($signed(zext_ln122_2_fu_600_p1) + $signed(9'd320));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign conv4_i8_out = conv4_i8_fu_96;

assign conv4_i_1018_out = conv4_i_1018_fu_136;

assign conv4_i_1119_out = conv4_i_1119_fu_140;

assign conv4_i_1220_out = conv4_i_1220_fu_144;

assign conv4_i_1321_out = conv4_i_1321_fu_148;

assign conv4_i_1422_out = conv4_i_1422_fu_152;

assign conv4_i_1523_out = conv4_i_1523_fu_156;

assign conv4_i_1624_out = conv4_i_1624_fu_160;

assign conv4_i_19_out = conv4_i_19_fu_100;

assign conv4_i_210_out = conv4_i_210_fu_104;

assign conv4_i_311_out = conv4_i_311_fu_108;

assign conv4_i_412_out = conv4_i_412_fu_112;

assign conv4_i_513_out = conv4_i_513_fu_116;

assign conv4_i_614_out = conv4_i_614_fu_120;

assign conv4_i_715_out = conv4_i_715_fu_124;

assign conv4_i_816_out = conv4_i_816_fu_128;

assign conv4_i_917_out = conv4_i_917_fu_132;

assign feature_2_fu_540_p2 = (ap_sig_allocacmp_feature + 7'd1);

assign grp_fu_1007_p1 = sext_ln1494_reg_1299;

assign grp_fu_1015_p1 = sext_ln1494_reg_1299;

assign grp_fu_1023_p1 = sext_ln1494_reg_1299;

assign grp_fu_1031_p1 = sext_ln1494_reg_1299;

assign grp_fu_1039_p1 = sext_ln1494_reg_1299;

assign grp_fu_1047_p1 = sext_ln1494_reg_1299;

assign grp_fu_1055_p1 = sext_ln1494_reg_1299;

assign grp_fu_1063_p1 = sext_ln1494_reg_1299;

assign grp_fu_1071_p1 = sext_ln1494_reg_1299;

assign grp_fu_1079_p1 = sext_ln1494_reg_1299;

assign grp_fu_1087_p1 = sext_ln1494_reg_1299;

assign grp_fu_1095_p1 = sext_ln1494_reg_1299;

assign grp_fu_1103_p1 = sext_ln1494_reg_1299;

assign grp_fu_1111_p1 = sext_ln1494_reg_1299;

assign grp_fu_981_p1 = sext_ln1494_fu_568_p1;

assign grp_fu_990_p1 = sext_ln1494_fu_568_p1;

assign grp_fu_999_p1 = sext_ln1494_reg_1299;

assign icmp_ln122_fu_534_p2 = ((ap_sig_allocacmp_feature == 7'd64) ? 1'b1 : 1'b0);

assign inputs_address0 = zext_ln122_fu_546_p1;

assign sext_ln130_1_fu_648_p1 = zext_ln130_1_cast_reg_1330;

assign sext_ln130_2_fu_656_p1 = xor_ln130_reg_1287;

assign sext_ln130_3_fu_770_p1 = zext_ln130_3_cast_reg_1356;

assign sext_ln130_4_fu_778_p1 = add_ln130_reg_1366;

assign sext_ln130_5_fu_808_p1 = zext_ln130_1_cast_reg_1330;

assign sext_ln130_6_fu_816_p1 = xor_ln130_reg_1287;

assign sext_ln130_fu_592_p1 = xor_ln130_reg_1287;

assign sext_ln1494_fu_568_p1 = $signed(inputs_q0);

assign xor_ln130_fu_552_p2 = (ap_sig_allocacmp_feature ^ 7'd64);

assign zext_ln122_1_fu_670_p1 = feature_reg_1262;

assign zext_ln122_2_fu_600_p1 = feature_reg_1262;

assign zext_ln122_fu_546_p1 = ap_sig_allocacmp_feature;

assign zext_ln130_10_fu_743_p1 = add_ln130_2_fu_738_p2;

assign zext_ln130_11_fu_773_p1 = $unsigned(sext_ln130_3_fu_770_p1);

assign zext_ln130_12_fu_781_p1 = $unsigned(sext_ln130_4_fu_778_p1);

assign zext_ln130_13_fu_811_p1 = $unsigned(sext_ln130_5_fu_808_p1);

assign zext_ln130_14_fu_819_p1 = $unsigned(sext_ln130_6_fu_816_p1);

assign zext_ln130_15_cast_fu_846_p3 = {{4'd8}, {feature_reg_1262}};

assign zext_ln130_15_fu_853_p1 = zext_ln130_15_cast_fu_846_p3;

assign zext_ln130_1_cast_fu_580_p3 = {{1'd1}, {feature_reg_1262}};

assign zext_ln130_1_fu_587_p1 = $unsigned(zext_ln130_1_cast_fu_580_p3);

assign zext_ln130_2_fu_595_p1 = $unsigned(sext_ln130_fu_592_p1);

assign zext_ln130_3_cast_fu_611_p3 = {{2'd2}, {feature_reg_1262}};

assign zext_ln130_3_fu_618_p1 = $unsigned(zext_ln130_3_cast_fu_611_p3);

assign zext_ln130_4_fu_629_p1 = $unsigned(add_ln130_fu_623_p2);

assign zext_ln130_5_fu_651_p1 = $unsigned(sext_ln130_1_fu_648_p1);

assign zext_ln130_6_fu_659_p1 = $unsigned(sext_ln130_2_fu_656_p1);

assign zext_ln130_7_cast_fu_681_p3 = {{3'd4}, {feature_reg_1262}};

assign zext_ln130_7_fu_688_p1 = zext_ln130_7_cast_fu_681_p3;

assign zext_ln130_8_fu_699_p1 = add_ln130_1_fu_693_p2;

assign zext_ln130_9_cast_fu_726_p3 = {{3'd5}, {feature_reg_1262}};

assign zext_ln130_9_fu_733_p1 = zext_ln130_9_cast_fu_726_p3;

assign zext_ln130_fu_558_p1 = $unsigned(xor_ln130_fu_552_p2);

always @ (posedge ap_clk) begin
    zext_ln130_1_cast_reg_1330[7] <= 1'b1;
    zext_ln130_3_cast_reg_1356[8:7] <= 2'b10;
    zext_ln122_1_reg_1416[9:7] <= 3'b000;
end

endmodule //model_evaluate_7_Pipeline_VITIS_LOOP_122_2
